import*as o from"../model/point.js";import*as n from"../view/map.js";import*as e from"./rpg.js";import*as i from"./engine.js";const t=new o.Point(0,1),s=new o.Point(1,0),r=new o.Point(0,-1),c=new o.Point(-1,0),a=[t,s,r,c];class h{constructor(n){this.connected=[i.hero.location];var o,t=Array.from(n.units),e=t.find(o=>o.location.equals(n.entrance));for(o of[i.hero,e])t.splice(t.indexOf(o),1);this.goals=t.map(o=>o.location)}dighorizontal(o,n){for(var t=[];o.x!=n.x;)o.x+=o.x<n.x?1:-1,t.push(o.clone());return t.push(o.clone()),t}digvertical(o,n){for(var t=[];o.y!=n.y;)o.y+=o.y<n.y?1:-1,t.push(o.clone());return t.push(o.clone()),t}connect(o,n){o=o.clone(),n=n.clone();var t=[o.clone()];return e.chancein(2)?(t.push(...this.dighorizontal(o,n)),t.push(...this.digvertical(t[t.length-1],n))):(t.push(...this.digvertical(o,n)),t.push(...this.dighorizontal(t[t.length-1],n))),t}generate(){for(var o,t=[];0<this.goals.length;){let n=e.pick(this.goals);this.goals.splice(this.goals.indexOf(n),1),t.find(o=>o.equals(n))||(o=e.pick(this.connected),t.push(...this.connect(n,o))),this.connected.push(n)}return t}}export{h as Digger};