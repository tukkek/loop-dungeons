import*as i from"./engine.js";import*as e from"./rpg.js";import*as s from"../model/dungeon/floor.js";import*as n from"../model/unit/chest.js";import*as a from"../model/unit/stairs.js";import*as l from"../view/map.js";import*as f from"../model/point.js";import*as u from"../view/sidebar.js";import*as h from"./mechanic/traversal.js";import*as o from"./audio.js";const t="Stopping auto-explore...";class m extends f.Point{constructor(o,e){super(o,e)}value(){return r.explore}validate(){for(let e of this.neighbors)if(e.validate(0,0,l.width,l.height)&&!i.floor.wall(e.x,e.y)&&!i.floor.seen.find(o=>o.equals(e)))return!0;return!1}get location(){return this}}var r={stairs:2,explore:1},c=!1;function p(o=!1){c=!1,o&&x()}function d(o){var e,t=new PF.Grid(l.width,l.height);for(e of f.range(0,0,l.width,l.height)){var r=i.floor.tiles[e.x][e.y];t.setWalkableAt(e.x,e.y,r==s.empty)}var n=i.hero.location;return(new PF.AStarFinder).findPath(n.x,n.y,o.x,o.y,t)}function v(){var o,t=i.floor;let r=[];for(let e of t.units)0!=e.value()&&t.seen.find(o=>o.equals(e.location))&&0<d(e).length&&r.push(e);for(let e of t.seen)t.units.find(o=>o.location.equals(e))||(o=new m(e.x,e.y)).validate()&&r.push(o);0!=r.length&&(r.sort((o,e)=>o.value()-e.value()).reverse(),r=r.filter(o=>o.value()==r[0].value()),e.shuffle(r),r.sort((o,e)=>d(o).length-d(e).length),c=r[0])}function g(o,e){let t=!1;t=0==o&&1==e?"north":1==o&&0==e?"east":0==o&&-1==e?"south":"west",u.flash(document.querySelector("#"+t))}function x(o=t){u.log(o),u.explore(!1)}function w(){var o,e,t,r;i.explore&&!s.generating&&(4<=i.hero.wounds?(u.log("Too hurt!"),p(!0)):(o=i.hero,c&&!c.location.equals(o.location)||v(),c&&(g(e=(t=d(c)[1])[0]-o.x,t=t[1]-o.y),r=c instanceof n.Chest&&!c.open&&c.gear,h.move(e,t),c)&&c.location.equals(o.location)&&(c instanceof a.Down&&c.climb(),p(r))))}function j(){o.listeners.push(w)}export{r as value,p as reset,w as turn,j as setup};