import*as r from"../../view/map.js";import*as e from"../point.js";import*as t from"../unit/actor/hero/hero.js";import*as i from"../unit/actor/enemy/slime.js";import*as o from"../../control/rpg.js";import*as s from"../../control/mechanic/combat.js";import*as n from"../unit/chest.js";import*as h from"../../control/digger.js";import*as a from"../unit/stairs.js";import*as l from"../../control/engine.js";import*as c from"../../control/homer.js";import*as p from"../../control/spawner.js";import*as f from"../../control/mechanic/traversal.js";const m=new Map([[1,-1],[2,-1],[3,-1],[4,0],[5,0],[6,1]]),u=5,g=3;var w="#",x=" ";class d{constructor(t){this.level=t,this.tiles=Array.from(new Array(r.width),()=>new Array(r.height).fill(w)),this.units=[],this.seen=[],this.entrance=new e.Point(o.roll(0,r.width-1),o.roll(0,r.height-1)),o.chancein(2)?this.entrance.x=o.chancein(2)?0:r.width-1:this.entrance.y=o.chancein(2)?0:r.height-1}get depth(){return l.dungeon.floors.indexOf(this)}get last(){return this.depth==l.dungeon.floors.length-1}populate(){var i=[],e=(this.last||i.push(new a.Down),o.rolldie(u,4));for(let t=0;t<e;t++){var s=o.chancein(g)?new n.Chest:p.spawn(this.challenge());i.push(s)}for(let e of i){for(;-1==e.x||this.units.find(t=>e!=t&&t.x==e.x&&t.y==e.y);)e.location.x=o.roll(2,r.width-2),e.location.y=o.roll(2,r.height-2);this.place(e,e.x,e.y)}this.place(new a.Up,this.entrance.x,this.entrance.y)}generate(){if(!(1<this.units.length)){y=!0,this.populate();for(var t of this.units)this.tiles[t.x][t.y]=x;var e;for(e of new h.Digger(this).generate())this.tiles[e.x][e.y]=x;new c.Homer(this).house(),y=!1}}wall(t,e){return this.tiles[t][e]==w}place(t,e,i){this.units.indexOf(t)<0&&this.units.push(t),t.place(e,i)}enter(t){if(a.last instanceof a.Up){var i=[];for(let e of this.units.find(t=>t instanceof a.Down).location.neighbors)!e.validate(0,0,r.width,r.height)||this.wall(e.x,e.y)||this.units.find(t=>t.location.equals(e))||i.push(e);var e=o.pick(i);this.place(t,e.x,e.y)}else{e=this.entrance.clone();0==e.x?e.x+=1:0==e.y?e.y+=1:e.x==r.width-1?--e.x:--e.y,this.place(t,e.x,e.y),this.generate()}f.explore(t.x,t.y,!1)}remove(t){this.units.splice(this.units.indexOf(t),1)}challenge(){let e=this.level;for(let t=o.roll();0!=m.get(t);t=o.roll())e+=m.get(t);return 5<e?5:e<1?1:e}}var y=!1;export{w as wall,x as empty,d as Floor,y as generating};