import*as t from"../../control/rpg.js";import*as s from"../../control/engine.js";import*as e from"../../control/mechanic/combat.js";var o=0,r=1,i=2,n=3,c=4,l=[o,r,i,n,c];const a="Inflict critical damage on hit",h="Ignore damage when hit",u="Flee from battle";class d{constructor(e,t,r,s){this.name=e,this.image=t,this.effect=r,this.slot=s,this.level=1,this.cooling=!1}toString(){return`+${this.level} `+this.name.toLowerCase()}use(e){return!this.cooling&&!(!s.hero.roll(e)||t.roll()>this.level)&&(this.cooling=!0)}hit(e,t){return!0}dodge(e,t){return!0}get canupgrade(){return this.level<5&&s.hero.xp>=this.level}flee(){return!1}}class g extends d{constructor(e,t,r=a){super(e,t,r,o)}hit(e,t){var r=s.hero;return e!=r||t.hp-t.wounds<=1||this.use(r.force)&&(e.report(`The ${e} lands a critical strike!`,"castattack").wound=t),!0}}class m extends d{constructor(e,t,r){super(e,t,h,r)}hit(e,t){var r=s.hero;return t!=r||!this.use(r.force)||(t.report(`The ${t} blocks the attack!`,"castdodge"),!1)}}class p extends d{constructor(e,t){super(e,t,u,c)}flee(){return this.use(s.hero.speed)}}export{o as weapon,r as support,i as body,n as head,c as feet,l as slots,d as Gear,g as Weapon,m as Armor,p as Boots};